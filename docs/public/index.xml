<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Introduction on caos theory</title>
    <link>https://daniladanila.github.io/2024-caos-examples/</link>
    <description>Recent content in Introduction on caos theory</description>
    <generator>Hugo</generator>
    <language>ru-ru</language>
    <atom:link href="https://daniladanila.github.io/2024-caos-examples/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>bash</title>
      <link>https://daniladanila.github.io/2024-caos-examples/docs/theory/devools/bash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://daniladanila.github.io/2024-caos-examples/docs/theory/devools/bash/</guid>
      <description>&lt;h1 id=&#34;bash&#34;&gt;&#xA;  bash&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#bash&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;bash-1&#34;&gt;&#xA;  bash&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#bash-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;минутка-душнотытерминологии&#34;&gt;&#xA;  Минутка &lt;del&gt;душноты&lt;/del&gt;терминологии&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%d0%bc%d0%b8%d0%bd%d1%83%d1%82%d0%ba%d0%b0-%d0%b4%d1%83%d1%88%d0%bd%d0%be%d1%82%d1%8b%d1%82%d0%b5%d1%80%d0%bc%d0%b8%d0%bd%d0%be%d0%bb%d0%be%d0%b3%d0%b8%d0%b8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;терминал&lt;/strong&gt; - (вообще говоря - эмулятор терминала) - окошко, куда вводят команды&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;оболочка&lt;/strong&gt; aka &lt;strong&gt;shell&lt;/strong&gt; - программа-интерпретатор, которая эти команды исполняет&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;bash&lt;/strong&gt; - одна из оболочек (установлена в начале почти везде)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;zsh&lt;/strong&gt; - ещё одна оболочка (оболочка по умолчанию в macOS)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;из-чего-состоит-команда&#34;&gt;&#xA;  Из чего состоит команда&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%d0%b8%d0%b7-%d1%87%d0%b5%d0%b3%d0%be-%d1%81%d0%be%d1%81%d1%82%d0%be%d0%b8%d1%82-%d0%ba%d0%be%d0%bc%d0%b0%d0%bd%d0%b4%d0%b0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Будет много команд (привыкайте). В общем виде команда выглядит как-то так&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cmd arg1 arg2 arg3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;cmd&lt;/code&gt; - имя команды&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;arg1&lt;/code&gt;, &lt;code&gt;arg2&lt;/code&gt;, &amp;hellip; - аргументы&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;arg0&lt;/code&gt; тоже есть - это имя команды&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Почти всегда (об этом сильно потом &lt;code&gt;TODO: добавить ссылку&lt;/code&gt;) команда - это название программы. Программы доступные для запуска лежат, например, по пути &lt;code&gt;/bin/&lt;/code&gt;. Список всех путей можно посмотреть в переменной окружения &lt;code&gt;PATH&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>whoami</title>
      <link>https://daniladanila.github.io/2024-caos-examples/docs/theory/whoami/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://daniladanila.github.io/2024-caos-examples/docs/theory/whoami/</guid>
      <description>&lt;h1 id=&#34;whoami&#34;&gt;&#xA;  whoami&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#whoami&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Данила&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;lastname&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Манаков&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;education&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ФИВТ МФТИ&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;grade&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1-ый курс магистратура&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;telegram&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;t.me/DanilaManakov&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;communication_policy&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;24 / 7 / 365&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;work-experience&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Яндекс&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;major&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;backend Python / C++&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;is_active&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Anabar&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;major&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;backend Python&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;is_active&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Т-Банк (ex. Тинькофф)&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;major&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Product Analytics &amp;amp; Data Science&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;is_active&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Некрономикон</title>
      <link>https://daniladanila.github.io/2024-caos-examples/docs/theory/necronomicon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://daniladanila.github.io/2024-caos-examples/docs/theory/necronomicon/</guid>
      <description>&lt;h1 id=&#34;некрономикон&#34;&gt;&#xA;  Некрономикон&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%d0%bd%d0%b5%d0%ba%d1%80%d0%be%d0%bd%d0%be%d0%bc%d0%b8%d0%ba%d0%be%d0%bd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Тут содержится список заклинаний, запрещенных к использованию.&lt;/p&gt;&#xA;&lt;details &gt;&lt;summary&gt;чё?...&lt;/summary&gt;&#xA;  &lt;div class=&#34;markdown-inner&#34;&gt;&#xA;&lt;p&gt;Содержание любого &amp;ldquo;примера&amp;rdquo; с этой страницы в вашем коде &lt;em&gt;может&lt;/em&gt; являеться причиной непрохождения код-ревью&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/details&gt;&#xA;&lt;h2 id=&#34;общие-требования-к-любому-коду&#34;&gt;&#xA;  общие требования к любому коду&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%d0%be%d0%b1%d1%89%d0%b8%d0%b5-%d1%82%d1%80%d0%b5%d0%b1%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d1%8f-%d0%ba-%d0%bb%d1%8e%d0%b1%d0%be%d0%bc%d1%83-%d0%ba%d0%be%d0%b4%d1%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;старайтесь писать красиво&#xA;&lt;ul&gt;&#xA;&lt;li&gt;почти всегда &lt;code&gt;красиво = кратко&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;а ещё почти всегда &lt;code&gt;кратко = читаемо&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;давайте осмысленные имена переменным и функциям&#xA;&lt;ul&gt;&#xA;&lt;li&gt;желательно без однобуквенных названий (не экономьте буквы! они бесплатны)&lt;/li&gt;&#xA;&lt;li&gt;имена функций - желательно глагол&lt;/li&gt;&#xA;&lt;li&gt;имена переменных - желательно существительное&#xA;&lt;ul&gt;&#xA;&lt;li&gt;для флагов можно &lt;code&gt;is_active&lt;/code&gt; (ну типа)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;общепринятые имена (src / dst / fd / socket / i / &amp;hellip;) - это круто!&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;избегайте magic_numbers&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;those who do not believe in %magic will never find it&lt;/code&gt;, но у нас тут C&#xA;&lt;ul&gt;&#xA;&lt;li&gt;шутка подготовлена любителями python&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&amp;hellip;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;(список будет пополняться)&lt;/p&gt;</description>
    </item>
    <item>
      <title>этапы сборки</title>
      <link>https://daniladanila.github.io/2024-caos-examples/docs/theory/devools/build/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://daniladanila.github.io/2024-caos-examples/docs/theory/devools/build/</guid>
      <description>&lt;h1 id=&#34;этапы-сборки&#34;&gt;&#xA;  Этапы сборки&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%d1%8d%d1%82%d0%b0%d0%bf%d1%8b-%d1%81%d0%b1%d0%be%d1%80%d0%ba%d0%b8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://daniladanila.github.io/2024-caos-examples/sems/devtools/vjuh.jpg&#34; alt=&#34;вжух!&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;Будем разбирать, как код на C превращается в &lt;del&gt;ошику компиляции&lt;/del&gt; исполняемый файлик.&lt;/p&gt;&#xA;&lt;h2 id=&#34;вот-они-слева-направо&#34;&gt;&#xA;  Вот они слева направо&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%d0%b2%d0%be%d1%82-%d0%be%d0%bd%d0%b8-%d1%81%d0%bb%d0%b5%d0%b2%d0%b0-%d0%bd%d0%b0%d0%bf%d1%80%d0%b0%d0%b2%d0%be&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;(Ну только сверху вниз)&#xA;&#xA;&#xA;&lt;script src=&#34;https://daniladanila.github.io/2024-caos-examples/2024-caos-examples/mermaid.min.js&#34;&gt;&lt;/script&gt;&#xA;&#xA;  &lt;script&gt;mermaid.initialize({&#xA;  &#34;flowchart&#34;: {&#xA;    &#34;useMaxWidth&#34;:true&#xA;  },&#xA;  &#34;theme&#34;: &#34;default&#34;&#xA;}&#xA;)&lt;/script&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;pre class=&#34;mermaid&#34;&gt;&#xA;graph TD;&#xA;    c[Код на C]&#xA;    yac[Снова код на C]&#xA;    asm[Код на ассемблере]&#xA;    op[Машинные инструкции]&#xA;    elf[Исполняемый файл]&#xA;&#xA;    c --&gt;|Препроцессор| yac&#xA;    yac --&gt;|Компилятор| asm&#xA;    asm --&gt;|Ассемблер| op&#xA;    op --&gt;|Линкер| elf&#xA;&lt;/pre&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;(и да, препроцессор из кода на C делает код на C)&lt;/p&gt;</description>
    </item>
    <item>
      <title>как ловить ошибки</title>
      <link>https://daniladanila.github.io/2024-caos-examples/docs/theory/devools/debugger/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://daniladanila.github.io/2024-caos-examples/docs/theory/devools/debugger/</guid>
      <description>&lt;h1 id=&#34;как-ловить-ошибки&#34;&gt;&#xA;  как ловить ошибки&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%d0%ba%d0%b0%d0%ba-%d0%bb%d0%be%d0%b2%d0%b8%d1%82%d1%8c-%d0%be%d1%88%d0%b8%d0%b1%d0%ba%d0%b8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;отладчик&#34;&gt;&#xA;  отладчик&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%d0%be%d1%82%d0%bb%d0%b0%d0%b4%d1%87%d0%b8%d0%ba&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Звучит банально - но попробуйте)&lt;/p&gt;&#xA;&lt;p&gt;Он позволяет:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;смотреть на значения переменных во время исполнения программы&lt;/li&gt;&#xA;&lt;li&gt;построчно исполнять программу&lt;/li&gt;&#xA;&lt;li&gt;ставить &lt;code&gt;breakpoint&lt;/code&gt;-ы на определенных строках -&#xA;это нужно чтоб доходить до проблемного места автоматически&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Для начала привыкайте во время тестирования собиать программы с флагом &lt;code&gt;-ggdb&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcc -ggdb main.c -o runmepls&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Это включит в исполняемый файл &lt;code&gt;runmepls&lt;/code&gt; отладочную информацию.&#xA;Без неё вам придется вглядываться в язык ассемблера, а это не так удобно.&lt;/p&gt;</description>
    </item>
    <item>
      <title>автоматизация сборки</title>
      <link>https://daniladanila.github.io/2024-caos-examples/docs/theory/devools/make/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://daniladanila.github.io/2024-caos-examples/docs/theory/devools/make/</guid>
      <description>&lt;h1 id=&#34;автоматизация-сборки&#34;&gt;&#xA;  Автоматизация сборки&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%d0%b0%d0%b2%d1%82%d0%be%d0%bc%d0%b0%d1%82%d0%b8%d0%b7%d0%b0%d1%86%d0%b8%d1%8f-%d1%81%d0%b1%d0%be%d1%80%d0%ba%d0%b8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Ну а теперь, finally, про то, как собирать проекты!&lt;/p&gt;&#xA;&lt;h2 id=&#34;как-собирать-проекты&#34;&gt;&#xA;  Как собирать проекты&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%d0%ba%d0%b0%d0%ba-%d1%81%d0%be%d0%b1%d0%b8%d1%80%d0%b0%d1%82%d1%8c-%d0%bf%d1%80%d0%be%d0%b5%d0%ba%d1%82%d1%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Окей хорошо&amp;hellip; У меня есть куча файлов. Что с ними делать то?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Чтоб была какая-нибудь конкретика, давайте определимся с проектом, который&#xA;сделает вас супер богатым&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tree bitcoin_cracker&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bitcoin_cracker&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── encription.c&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── encription.h&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── hashlib.c&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── hashlib.h&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── main.c&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── small_math.c&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;└── small_math.h&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;При этом давайте допустим, что&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;hashlib&lt;/code&gt; и &lt;code&gt;encription&lt;/code&gt; оба используют &lt;code&gt;small_math&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;main&lt;/code&gt; использует только &lt;code&gt;hashlib&lt;/code&gt; и &lt;code&gt;encription&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;зависимости&#34;&gt;&#xA;  Зависимости&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%d0%b7%d0%b0%d0%b2%d0%b8%d1%81%d0%b8%d0%bc%d0%be%d1%81%d1%82%d0%b8&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;В &lt;code&gt;.h&lt;/code&gt;-файлах находятся объявления функций и констант. В &lt;code&gt;.c&lt;/code&gt; содержатся их&#xA;определения (да, взучит криво - гуглите &amp;ldquo;declaration vs definition&amp;rdquo;).&#xA;Если нет - надо рефакторить. Такое &lt;del&gt;го..&lt;/del&gt; месиво собрать будет сложно&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>floats</title>
      <link>https://daniladanila.github.io/2024-caos-examples/docs/theory/x86_64/floats/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://daniladanila.github.io/2024-caos-examples/docs/theory/x86_64/floats/</guid>
      <description>&lt;h1 id=&#34;floats&#34;&gt;&#xA;  Floats&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#floats&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;В курсе не рассматриваются команды для старого &lt;code&gt;FPU&lt;/code&gt; (который &lt;code&gt;fmov&lt;/code&gt;, &lt;code&gt;fadd&lt;/code&gt; &amp;hellip;), поэтому мы его тоже скипнем.&lt;/p&gt;&#xA;&lt;p&gt;Раньше особого смысла в обработке дробных чисел на офисных машинках не было.&#xA;(тем более что деньги так считать нельзя).&lt;/p&gt;&#xA;&lt;p&gt;Поэтому &lt;code&gt;FPU&lt;/code&gt; (Floating point Processing Unit) стал поставлятся не сразу, а в начале вообще был&#xA;отдельным &amp;ldquo;камнем&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;Сейчас это просто один из модулей центрального процессора.&lt;/p&gt;&#xA;&lt;h2 id=&#34;sse-streaming-simd-extensions&#34;&gt;&#xA;  SSE (Streaming SIMD Extensions)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#sse-streaming-simd-extensions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;В x86_64 есть большие регистры, через которые можно работать с числами с плавающей точкой.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linaro (а как тестить)</title>
      <link>https://daniladanila.github.io/2024-caos-examples/docs/theory/arm/linaro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://daniladanila.github.io/2024-caos-examples/docs/theory/arm/linaro/</guid>
      <description>&lt;h1 id=&#34;linaro-а-как-мне-это-запустить-то&#34;&gt;&#xA;  Linaro (а как мне это запустить то???)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#linaro-%d0%b0-%d0%ba%d0%b0%d0%ba-%d0%bc%d0%bd%d0%b5-%d1%8d%d1%82%d0%be-%d0%b7%d0%b0%d0%bf%d1%83%d1%81%d1%82%d0%b8%d1%82%d1%8c-%d1%82%d0%be&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Если у вас есть MacBook на &lt;code&gt;ARM&lt;/code&gt; или Raspberry Pi / другой китайский одноплатник, то можете писать на нём.&lt;/p&gt;&#xA;&lt;p&gt;Эта страничка необходима только людям с компами на intel.&lt;/p&gt;&#xA;&lt;h2 id=&#34;cross-compilation&#34;&gt;&#xA;  Cross compilation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#cross-compilation&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;У нас компы на intel (&lt;code&gt;x86_64&lt;/code&gt;), а код написан под &lt;code&gt;ARM&lt;/code&gt;.&#xA;Чтоб собирать под &lt;em&gt;другую&lt;/em&gt; (относительно нашей системы) архитектуру, нужен другой компилятор.&lt;/p&gt;&#xA;&lt;h3 id=&#34;стандартные-пакеты&#34;&gt;&#xA;  стандартные пакеты&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%d1%81%d1%82%d0%b0%d0%bd%d0%b4%d0%b0%d1%80%d1%82%d0%bd%d1%8b%d0%b5-%d0%bf%d0%b0%d0%ba%d0%b5%d1%82%d1%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;I use Arch btw&lt;/em&gt; так что за Ubuntu не очень шарю, но кажется можно просто поставить&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
